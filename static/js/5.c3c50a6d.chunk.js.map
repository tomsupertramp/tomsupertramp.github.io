{"version":3,"sources":["components/Task/Task.jsx","components/Task/index.js","views/Tasks/TasksComponent.jsx","views/Tasks/TasksContainer.js","views/Tasks/index.js"],"names":["Task","completed","title","userName","className","TasksComponent","items","allUsers","profile","ownId","id","ownName","name","length","map","task","key","userId","get","compose","connect","app","allTasks","dispatch","getTasks","actions","lifecycle","componentDidMount","this","props"],"mappings":"yIA6BeA,EApBF,SAAC,GAAD,IACXC,EADW,EACXA,UACAC,EAFW,EAEXA,MACAC,EAHW,EAGXA,SAHW,OAKX,wBAAIC,UAAU,qEACZ,wBAAIA,UAAU,QACXH,EACG,2BAAIC,GACJ,8BAAOA,IAGb,+BACGC,KCtBP,mC,mGCwCeE,EA3BQ,SAAC,GAAD,IACtBC,EADsB,EACtBA,MACAC,EAFsB,EAEtBA,SAFsB,IAGtBC,QACKC,EAJiB,EAIrBC,GACMC,EALe,EAKrBC,KALqB,OAQtB,yBAAKR,UAAU,aACd,uFACA,wBAAIA,UAAU,cACK,IAAjBE,EAAMO,QAAgBP,EAAMQ,KAAI,SAAAC,GAAI,OACpC,kBAACf,EAAA,EAAD,eACCgB,IAAKD,EAAKL,IACNK,EAFL,CAGCZ,SAAUM,IAAUM,EAAKE,OACtBN,EACAO,cAAIX,EAAD,UAAcQ,EAAKE,OAAnB,mBCXIE,cACbC,aAXsB,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAH,MAAc,CACpCf,MAAOe,EAAIC,SACXf,SAAUc,EAAId,SACdC,QAASa,EAAIb,YAGY,SAAAe,GAAQ,MAAK,CACtCC,SAAU,kBAAMD,EAASE,IAAQD,iBAKjCE,YAAU,CACRC,kBADQ,YAGNH,EADqBI,KAAKC,MAAlBL,eAJCL,CAQbd,GC3BF","file":"static/js/5.c3c50a6d.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst propTypes = {\n  completed: PropTypes.bool,\n  title: PropTypes.string,\n  userName: PropTypes.string,\n};\n\nconst Task = ({\n  completed,\n  title,\n  userName,\n}) => (\n  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n    <h5 className=\"mb-1\">\n      {completed\n        ? <s>{title}</s>\n        : <span>{title}</span>\n      }\n    </h5>\n    <small>\n      {userName}\n    </small>\n  </li>\n);\n\nTask.propTypes = propTypes;\n\nexport default Task;\n","export { default } from './Task';","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { get } from 'lodash';\n\n/* Components */\nimport Task from 'components/Task';\n\nconst propTypes = {\n\titems: PropTypes.array,\n\tallUsers: PropTypes.object,\n\tprofile: PropTypes.object,\n};\n\nconst TasksComponent = ({\n\titems,\n\tallUsers,\n\tprofile: {\n\t\tid: ownId,\n\t\tname: ownName,\n\t},\n}) => (\n\t<div className=\"container\">\n\t\t<h2>Все задачи</h2>\n\t\t<ul className=\"list-group\">\n\t\t\t{items.length !== 0 && items.map(task => (\n\t\t\t\t<Task\n\t\t\t\t\tkey={task.id} \n\t\t\t\t\t{...task} \n\t\t\t\t\tuserName={ownId === task.userId\n\t\t\t\t\t\t? ownName\n\t\t\t\t\t\t: get(allUsers, `${task.userId}.name`)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</ul>\n\t</div>\n);\n\nTasksComponent.propTypes = propTypes;\n\nexport default TasksComponent;","import { connect } from 'react-redux';\nimport { compose, lifecycle } from 'recompose';\n\n/* Actions */\nimport { actions } from 'views/ducks';\n\n/* Components */\nimport TasksComponent from './TasksComponent';\n\nconst mapStateToProps = ({ app }) => ({ \n  items: app.allTasks,\n  allUsers: app.allUsers,\n  profile: app.profile,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getTasks: () => dispatch(actions.getTasks()),\n});\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  lifecycle({\n    componentDidMount() {\n      const { getTasks } = this.props;\n      getTasks();\n    },\n  }),\n)(TasksComponent);","export { default } from './TasksContainer';"],"sourceRoot":""}