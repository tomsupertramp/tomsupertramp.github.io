{"version":3,"sources":["services/ducks/types.js","services/ducks/reducers.js","services/ducks/actions.js","services/ducks/sagas.js","store/sagas/index.js","views/Search/ducks/types.js","views/Search/ducks/actions.js","views/Search/ducks/reducers.js","modules/Cart/ducks/types.js","modules/Cart/ducks/actions.js","modules/Cart/ducks/reducers.js","store/reducer.js","store/index.js","components/Form/Form.jsx","components/Form/Input/Input.jsx","components/Form/Checkbox/Checkbox.jsx","components/Form/Datepicker/Datepicker.jsx","components/Form/Select/Select.jsx","views/Search/Filter/Filter.jsx","components/Card/Card.jsx","views/Search/Products/Products.jsx","views/Search/SearchComponent.jsx","views/Search/SearchContainer.js","views/Signup/SignupComponent.jsx","views/Signup/SignupContainer.js","views/Login/LoginComponent.jsx","views/Login/LoginContainer.js","views/Home/HomeComponent.jsx","views/Home/HomeContainer.js","modules/Cart/CartComponent.jsx","modules/Cart/CartContainer.js","modules/Header/HeaderComponent.jsx","modules/Header/HeaderContainer.js","AppComponent.jsx","AppContainer.js","serviceWorker.js","index.js"],"names":["types","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","initialState","isAuthenticated","successSignup","error","user","actions","values","type","signup","login","servicesSaga","salt","bcrypt","genSaltSync","_ref","username","password","hash","regenerator_default","a","wrap","_context","prev","next","localStorage","getItem","put","hashSync","setItem","t0","message","stop","_marked","this","_ref2","_context2","compareSync","push","_marked2","_context3","takeLatest","_marked3","rootSaga","all","fork","sagas_marked","FETCH_PRODUCTS","ducks_actions","params","products","data","inStock","color","priceFrom","priceTo","dateFrom","dateTo","filter","item","colorFilter","inStockFilter","price","date","moment","issueDate","isBetween","isSameOrBefore","isSameOrAfter","issueDateFilter","UPDATE_CART","TOGGLE_CART_MODAL","Cart_ducks_actions","items","isOpen","appReducer","combineReducers","routing","routerReducer","services","state","arguments","length","undefined","action","Object","objectSpread","LOCATION_CHANGE","search","cart","toConsumableArray","concat","history","createHistory","sagaMiddleware","createSagaMiddleware","middleware","routerMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","apply","run","Form","children","onSubmit","title","react_default","createElement","className","reactstrap_es","FormInput","name","field","_ref$form","form","touched","errors","label","placeholder","format","props","objectWithoutProperties","htmlFor","number_format_default","assign","id","Input","formik_esm","component","Checkbox","check","Form_Checkbox_Checkbox","FormDatepicker","inputClassName","rest","for","react_datepicker_es","onChange","value","setFieldValue","handleChange","placeholderText","selected","Datepicker","FormSelect","Select","Search_Filter_Filter","withFormik","mapPropsToValues","handleSubmit","lifecycle","componentWillReceiveProps","nextProps","autoSave","debounce","isEqual","components_Form_Form","sm","size","offset","thousandSeparator","decimalScale","ProductCard","raiting","image","handleClick","isCart","xs","src","alt","onClick","build_default","rating","starDimension","starSpacing","Products","updateCart","map","Card","key","SearchComponent","fetchProducts","Search_Products_Products","connect","dispatch","cartActions","componentDidMount","SignupComponent","md","schema","Yup","shape","min","required","passwordConfirm","oneOf","SignupContainer","_ref$services","validationSchema","LoginComponent","HomeComponent","location","Switch","Route","path","exact","Signup","Login","Redirect","to","Cart","toggleCartModal","toggle","_ref$cart","CartComponent","HeaderComponent","cartItemsCount","light","expand","react_router_bootstrap_lib","navbar","href","CartContainer","AppComponent","Component","Search","Home","HeaderContainer","Boolean","hostname","match","ReactDOM","render","es","react_router_redux_es","AppContainer","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ae89b40.chunk.js","sourcesContent":["const types = {\n  LOGIN_REQUEST: 'SERVICES/LOGIN_REQUEST',\n  LOGIN_SUCCESS: 'SERVICES/LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'SERVICES/LOGIN_FAILURE',\n\n  SIGNUP_REQUEST: 'SERVICES/SIGNUP_REQUEST',\n  SIGNUP_SUCCESS: 'SERVICES/SIGNUP_SUCCESS',\n  SIGNUP_FAILURE: 'SERVICES/SIGNUP_FAILURE',\n};\n\nexport default types;\n","import types from './types';\nimport { LOCATION_CHANGE } from 'react-router-redux';\n\nconst initialState = {\n  isAuthenticated: false,\n  successSignup: false,\n  error: null,\n  user: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.SIGNUP_REQUEST:\n      return {\n        ...state,\n        successSignup: false,\n        error: null,\n      };\n    case types.SIGNUP_SUCCESS:\n      return {\n        ...state,\n        successSignup: true,\n        error: null,\n      };\n    case types.SIGNUP_FAILURE:\n      return {\n        ...state,\n        error: action.error,\n      };\n    case types.LOGIN_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.user,\n        error: null,\n      };\n    case types.LOGIN_FAILURE:\n      return {\n        ...state,\n        error: action.error,\n      };\n    case LOCATION_CHANGE:\n      return {\n        ...state,\n        successSignup: false,\n        error: null,\n      };\n    default:\n      return state;\n  }\n};\n","import types from './types';\n\nconst signup = values => ({ type: types.SIGNUP_REQUEST, values });\nconst login = values => ({ type: types.LOGIN_REQUEST, values });\n\nexport default {\n  signup,\n  login,\n};\n","import {\n  put,\n  takeLatest,\n} from 'redux-saga/effects';\nimport { push } from 'react-router-redux';\nimport bcrypt from 'bcryptjs';\n\n/* Types */\nimport types from './types';\n\nconst salt = bcrypt.genSaltSync(10);\n\nfunction* signup({ values }) {\n  try {\n    const { username, password } = values;\n\n    if (localStorage.getItem(username)) {\n      yield put({ type: types.SIGNUP_FAILURE, error: 'User already exist' });\n    } else {\n      const hash = bcrypt.hashSync(password, salt);\n      localStorage.setItem(username, hash);\n      yield put({ type: types.SIGNUP_SUCCESS });\n    }\n  } catch (e) {\n    yield put({ type: types.LOGIN_FAILURE, error: e.message });\n  }\n}\n\nfunction* login({ values }) {\n  try {\n    const { username, password } = values;\n    if (!localStorage.getItem(username) || !bcrypt.compareSync(password, localStorage.getItem(username))) {\n      yield put({ type: types.LOGIN_FAILURE, error: 'The username or password is incorrect' });\n    } else {\n      yield put(push('/'));\n      yield put({ type: types.LOGIN_SUCCESS, user: username });\n    }\n  } catch (e) {\n    yield put({ type: types.LOGIN_FAILURE, error: e.message });\n  }\n}\n\nexport function* servicesSaga() {\n  yield takeLatest(types.SIGNUP_REQUEST, signup);\n  yield takeLatest(types.LOGIN_REQUEST, login);\n}\n","import {\n  all,\n  fork,\n} from 'redux-saga/effects';\n\n/* Sagas */\nimport { servicesSaga } from 'services/ducks';\n\nexport default function* rootSaga() {\n  yield all([\n    fork(servicesSaga),\n  ]);\n}\n","const types = {\n  FETCH_PRODUCTS: 'FETCH_PRODUCTS',\n};\n\nexport default types;\n","import { filter } from 'lodash';\nimport moment from 'moment';\n\n/* Types */\nimport types from './types';\n\n/* Data */\nimport data from '../data.json';\n\nconst fetchProducts = (params) => {\n  let products = data;\n\n  if (params) {\n    const {\n      inStock,\n      color,\n      priceFrom,\n      priceTo,\n      dateFrom,\n      dateTo,\n    } = params;\n\n    products = filter(data, (item) => {\n      const colorFilter = !color || color === item.color;\n      const inStockFilter = inStock === item.inStock || inStock === false;\n      const priceFilter = () => {\n        if (!priceTo && !priceFrom) {\n          return true;\n        }\n\n        if (!priceTo) {\n          return item.price >= priceFrom;\n        }\n\n        if (!priceFrom) {\n          return item.price <= priceTo;\n        }\n\n        return item.price >= priceFrom && item.price <= priceTo;\n      };\n\n      const issueDateFilter = () => {\n        const date = moment(item.issueDate, 'MM-DD-YYYY');\n\n        if (!params.dateFrom && !params.dateTo) {\n          return true;\n        }\n\n        if (!params.dateTo) {\n          return moment(date).isSameOrAfter(dateFrom);\n        }\n\n        if (!params.dateFrom) {\n          return moment(date).isSameOrBefore(dateTo);\n        }\n\n        return moment(date).isBetween(dateFrom, dateTo);\n      };\n\n      return colorFilter && inStockFilter && priceFilter() && issueDateFilter();\n    });\n  }\n\n\n  return { type: types.FETCH_PRODUCTS, products };\n};\n\nexport default {\n  fetchProducts,\n};\n","import types from './types';\n\nconst initialState = {\n  products: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.FETCH_PRODUCTS:\n      return {\n        ...state,\n        products: action.products,\n      };\n    default:\n      return state;\n  }\n};\n","const types = {\n  UPDATE_CART: 'UPDATE_CART',\n  TOGGLE_CART_MODAL: 'TOGGLE_CART_MODAL',\n};\n\nexport default types;\n","import types from './types';\n\nconst updateCart = item => ({ type: types.UPDATE_CART, item });\nconst toggleCartModal = () => ({ type: types.TOGGLE_CART_MODAL });\n\nexport default {\n  updateCart,\n  toggleCartModal,\n};\n","import types from './types';\n\nconst initialState = {\n  items: [],\n  isOpen: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.UPDATE_CART:\n      return {\n        ...state,\n        items: [...state.items, action.item],\n      };\n    case types.TOGGLE_CART_MODAL:\n      return {\n        ...state,\n        isOpen: !state.isOpen,\n      };\n    default:\n      return state;\n  }\n};\n","import { routerReducer } from 'react-router-redux';\nimport { combineReducers } from 'redux';\n\n/* Reducers */\nimport { reducer as servicesReducer } from 'services/ducks';\nimport { reducer as searchReducer } from 'views/Search/ducks';\nimport { reducer as cartReducer } from 'modules/Cart/ducks';\n\nconst appReducer = combineReducers({\n  routing: routerReducer,\n  services: servicesReducer,\n  search: searchReducer,\n  cart: cartReducer,\n  // other reducers here...\n});\n\nexport default appReducer;\n","import { applyMiddleware, createStore, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport createHistory from 'history/createBrowserHistory'; // eslint-disable-line\nimport { routerMiddleware } from 'react-router-redux';\n\nimport rootSaga from './sagas';\nimport reducer from './reducer';\n\nexport const history = createHistory();\n\nconst sagaMiddleware = createSagaMiddleware();\nconst rMiddleware = routerMiddleware(history);\n\nconst middleware = [rMiddleware, sagaMiddleware];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; //eslint-disable-line\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(...middleware)));\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Form as ReactstrapForm } from 'reactstrap';\n\nconst propTypes = {\n  children: PropTypes.node,\n  onSubmit: PropTypes.func,\n  title: PropTypes.string,\n};\n\nconst Form = ({ children, onSubmit, title }) => (\n  <div>\n    <h2 className=\"form-title\">{title}</h2>\n    <ReactstrapForm onSubmit={onSubmit}>{children}</ReactstrapForm>\n  </div>\n);\n\nForm.propTypes = propTypes;\n\nexport default Form;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Input, Label } from 'reactstrap';\nimport { Field } from 'formik';\nimport NumberFormat from 'react-number-format';\n\nconst propTypes = {\n  name: PropTypes.string,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  type: PropTypes.string,\n};\n\nconst FormInput = ({\n  name,\n  field,\n  form: { touched, errors },\n  label,\n  placeholder,\n  type,\n  format,\n  ...props\n}) => {\n  const error = touched[field.name] && errors[field.name];\n  return (\n    <div>\n      <Label htmlFor={name}>{label}</Label>\n      {!format ? (\n        <Input\n          {...field}\n          id={name}\n          placeholder={placeholder}\n          type={type}\n        />\n      ) : (\n        <NumberFormat\n          {...field}\n          {...props}\n          id={name}\n          placeholder={placeholder}\n          type={type}\n        />\n      )}\n\n      {error && <span className=\"text-danger\">{error}</span>}\n    </div>\n  );\n};\n\nFormInput.propTypes = propTypes;\n\nexport default props => <Field name={props} component={FormInput} {...props} />;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Input, Label } from 'reactstrap';\nimport { Field } from 'formik';\n\nconst propTypes = {\n  label: PropTypes.string,\n};\n\nconst Checkbox = ({\n  label,\n  field,\n}) => (\n  <Label check>\n    <Input\n      type=\"checkbox\"\n      {...field}\n    />\n    {' '}\n    {label}\n  </Label>\n);\n\nCheckbox.propTypes = propTypes;\n\nexport default props => <Field name={props} component={Checkbox} {...props} />;\n","import React from 'react';\nimport DatePicker from 'react-datepicker';\nimport { Field } from 'formik';\nimport { Label } from 'reactstrap';\n\n/* Styles */\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst FormDatepicker = ({\n  className,\n  form,\n  field,\n  inputClassName,\n  placeholder,\n  label,\n  name,\n  ...rest\n}) => {\n  const handleChange = (value) => {\n    form.setFieldValue(field.name, value);\n  };\n\n  return (\n    <div>\n      <Label for={name}>{label}</Label>\n      <DatePicker\n        {...rest}\n        id={name}\n        onChange={value => handleChange(value)}\n        placeholderText={placeholder}\n        selected={field.value}\n      />\n    </div>\n  );\n};\n\n\nexport default props => <Field name={props} component={FormDatepicker} {...props} />;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Input, Label } from 'reactstrap';\nimport { Field } from 'formik';\n\nconst propTypes = {\n  name: PropTypes.string,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  children: PropTypes.node,\n};\n\nconst FormSelect = ({\n  children,\n  name,\n  label,\n  placeholder,\n  field,\n}) => (\n  <div>\n    <Label htmlFor={name}>{label}</Label>\n    <Input\n      id={name}\n      placeholder={placeholder}\n      type=\"select\"\n      {...field}\n    >\n      {children}\n    </Input>\n  </div>\n);\n\nFormSelect.propTypes = propTypes;\n\nexport default props => <Field name={props} component={FormSelect} {...props} />;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Col, Row } from 'reactstrap';\nimport { withFormik } from 'formik';\nimport { compose, lifecycle } from 'recompose';\nimport { debounce, isEqual } from 'lodash';\n\n/* Components */\nimport Form, {\n  Checkbox,\n  Datepicker,\n  Select,\n  Input,\n} from 'components/Form';\n\nconst propTypes = {\n  handleSubmit: PropTypes.func,\n};\n\nconst Filter = ({ handleSubmit }) => (\n  <Form onSubmit={handleSubmit}>\n    <Row>\n      <Col>\n        <Datepicker label=\"Date From\" name=\"dateFrom\" />\n      </Col>\n      <Col>\n        <Datepicker label=\"Date To\" name=\"dateTo\" />\n      </Col>\n      <Col sm={{ size: 2, offset: 2 }} className=\"align-middle\">\n        <Checkbox label=\"In stock only\" name=\"inStock\" />\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Input\n          label=\"Price from\"\n          name=\"priceFrom\"\n          thousandSeparator\n          format\n          decimalScale={2}\n          className=\"form-control\"\n        />\n      </Col>\n      <Col>\n        <Input\n          label=\"Price to\"\n          name=\"priceTo\"\n          thousandSeparator\n          format\n          decimalScale={2}\n          className=\"form-control\"\n        />\n      </Col>\n      <Col>\n        <Select label=\"Color\" name=\"color\">\n          <option value=\"\">Select</option>\n          <option>black</option>\n          <option>red</option>\n          <option>yellow</option>\n          <option>orange</option>\n          <option>green</option>\n        </Select>\n      </Col>\n    </Row>\n  </Form>\n);\n\nFilter.propTypes = propTypes;\n\nexport default compose(\n  withFormik({\n    mapPropsToValues: () => ({\n      dateFrom: null,\n      dateTo: null,\n      inStock: false,\n      priceFrom: '',\n      priceTo: '',\n      color: '',\n    }),\n    handleSubmit: (values, { props: { onSubmit } }) => {\n      onSubmit(values);\n    },\n  }),\n  lifecycle({\n    componentWillReceiveProps(nextProps) {\n      const { values, onSubmit } = nextProps;\n      const autoSave = debounce(() => {\n        onSubmit(values);\n      }, 300);\n      if (!isEqual(values, this.props.values)) {\n        autoSave();\n      }\n    },\n  }),\n)(Filter);\n","/* eslint react/jsx-one-expression-per-line:0 */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport StarRatings from 'react-star-ratings';\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  Button,\n  Row,\n  Col,\n} from 'reactstrap';\n\nconst propTypes = {\n  name: PropTypes.string,\n  color: PropTypes.string,\n  issueDate: PropTypes.string,\n  price: PropTypes.number,\n  raiting: PropTypes.number,\n  inStock: PropTypes.bool,\n  image: PropTypes.string,\n  handleClick: PropTypes.func,\n  isCart: PropTypes.bool,\n};\n\nconst ProductCard = ({\n  name,\n  color,\n  issueDate,\n  price,\n  raiting,\n  inStock,\n  image,\n  handleClick,\n  isCart,\n}) => (\n  <Card className=\"card\">\n    <Row>\n      <Col xs=\"3\" className=\"card-container\"><CardImg src={image} alt=\"Card image cap\" className=\"card-image\" /></Col>\n      <Col>\n        <CardBody>\n          <Row>\n            <Col><CardText>Name: {name}</CardText></Col>\n            <Col><CardText>IssueDate: {issueDate}</CardText></Col>\n            <Col><CardText>Price: ${price}</CardText></Col>\n          </Row>\n          <Row>\n            <Col><CardText>Color: {color}</CardText></Col>\n            <Col><CardText>InStock: {inStock ? 'Yes' : 'No'}</CardText></Col>\n            {!isCart && <Col><Button onClick={handleClick}>Order</Button></Col>}\n          </Row>\n          <Row>\n            <Col>\n              <StarRatings\n                rating={raiting}\n                starDimension=\"20px\"\n                starSpacing=\"2px\"\n              />\n            </Col>\n          </Row>\n        </CardBody>\n      </Col>\n    </Row>\n  </Card>\n);\n\nProductCard.propTypes = propTypes;\n\nexport default ProductCard;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { map } from 'lodash';\n\n/* Components */\nimport Card from 'components/Card';\n\nconst propTypes = {\n  products: PropTypes.array,\n  updateCart: PropTypes.func,\n};\n\nconst Products = ({ products, updateCart }) => (\n  <div>\n    {map(products, item => (\n      <Card\n        key={item.id}\n        handleClick={() => updateCart(item)}\n        {...item}\n      />\n    ))}\n  </div>\n);\n\nProducts.propTypes = propTypes;\n\nexport default Products;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Col, Row } from 'reactstrap';\n\n\n/* Components */\nimport Filter from './Filter';\nimport Products from './Products';\n\nconst propTypes = {\n  products: PropTypes.array,\n  fetchProducts: PropTypes.func,\n  updateCart: PropTypes.func,\n};\n\nconst SearchComponent = ({ products, fetchProducts, updateCart }) => (\n  <div>\n    <Row>\n      <Col>\n        <Filter onSubmit={fetchProducts} />\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        {products.length === 0 ? (\n          <div>No items...</div>\n        ) : (\n          <Products\n            products={products}\n            updateCart={updateCart}\n          />\n        )}\n      </Col>\n    </Row>\n  </div>\n);\n\nSearchComponent.propTypes = propTypes;\n\nexport default SearchComponent;\n","import { connect } from 'react-redux';\nimport { compose, lifecycle } from 'recompose';\n\n/* Actions */\nimport { actions } from './ducks';\nimport { actions as cartActions } from 'modules/Cart/ducks';\n\n/* Components */\nimport SearchComponent from './SearchComponent';\n\nconst mapStateToProps = ({ search: { products } }) => ({ products });\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProducts: filter => dispatch(actions.fetchProducts(filter)),\n  updateCart: item => dispatch(cartActions.updateCart(item)),\n});\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  lifecycle({\n    componentDidMount() {\n      const { fetchProducts } = this.props;\n      fetchProducts();\n    },\n  }),\n)(SearchComponent);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  Button,\n  Col,\n  Row,\n  FormGroup,\n  Alert,\n} from 'reactstrap';\n\n/* Components */\nimport Form, { Input } from 'components/Form';\n\nconst propTypes = {\n  handleSubmit: PropTypes.func,\n  error: PropTypes.string,\n  successSignup: PropTypes.bool,\n};\n\nconst SignupComponent = ({ handleSubmit, successSignup, error }) => (\n  <Row>\n    <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n      <Form title=\"Sign up\" onSubmit={handleSubmit}>\n        {successSignup && <Alert color=\"success\">Success registration!</Alert>}\n        {error && <Alert color=\"danger\">{error}</Alert>}\n        <FormGroup>\n          <Input\n            label=\"Username\"\n            name=\"username\"\n          />\n        </FormGroup>\n        <FormGroup>\n          <Input\n            label=\"Password\"\n            name=\"password\"\n            type=\"password\"\n          />\n        </FormGroup>\n        <FormGroup>\n          <Input\n            label=\"Password\"\n            name=\"passwordConfirm\"\n            type=\"password\"\n          />\n        </FormGroup>\n        <FormGroup>\n          <Button color=\"primary\" type=\"submit\">Sign up</Button>\n        </FormGroup>\n      </Form>\n    </Col>\n  </Row>\n);\n\nSignupComponent.propTypes = propTypes;\n\nexport default SignupComponent;\n","import { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\n\n/* Actions */\nimport { actions } from 'services/ducks';\n\n/* Components */\nimport SignupComponent from './SignupComponent';\n\nconst schema = Yup.object().shape({\n  username: Yup.string()\n    .min(3)\n    .required('Required'),\n  password: Yup.string().required('Required'),\n  passwordConfirm: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Passwords must match')\n    .required('Required'),\n});\n\nconst mapStateToProps = ({ services: { error, successSignup } }) => ({\n  error,\n  successSignup,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signup: values => dispatch(actions.signup(values)),\n});\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withFormik({\n    mapPropsToValues: () => ({\n      username: '',\n      password: '',\n      passwordConfirm: '',\n    }),\n    handleSubmit: (values, { props: { signup } }) => {\n      signup(values);\n    },\n    validationSchema: schema,\n  }),\n)(SignupComponent);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  Alert,\n  Button,\n  Col,\n  Row,\n  FormGroup,\n} from 'reactstrap';\n\n/* Components */\nimport Form, { Input } from 'components/Form';\n\nconst propTypes = {\n  error: PropTypes.string,\n  handleSubmit: PropTypes.func,\n};\n\nconst LoginComponent = ({ handleSubmit, error }) => (\n  <Row>\n    <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n      <Form title=\"Log in\" onSubmit={handleSubmit}>\n        {error && <Alert color=\"danger\">{error}</Alert>}\n        <FormGroup>\n          <Input\n            label=\"Username\"\n            name=\"username\"\n          />\n        </FormGroup>\n        <FormGroup>\n          <Input\n            label=\"Confirm password\"\n            name=\"password\"\n            type=\"password\"\n          />\n        </FormGroup>\n        <FormGroup>\n          <Button color=\"primary\" type=\"submit\">Log in</Button>\n        </FormGroup>\n      </Form>\n    </Col>\n  </Row>\n);\n\nLoginComponent.propTypes = propTypes;\n\nexport default LoginComponent;\n","import { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\n\n/* Actions */\nimport { actions } from 'services/ducks';\n\n/* Components */\nimport LoginComponent from './LoginComponent';\n\nconst schema = Yup.object().shape({\n  username: Yup.string().required('Required'),\n  password: Yup.string().required('Required'),\n});\n\nconst mapStateToProps = ({ services: { error } }) => ({\n  error,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  login: values => dispatch(actions.login(values)),\n});\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withFormik({\n    mapPropsToValues: () => ({\n      username: '',\n      password: '',\n    }),\n    handleSubmit: (values, { props: { login } }) => {\n      login(values);\n    },\n    validationSchema: schema,\n  }),\n)(LoginComponent);\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Jumbotron } from 'reactstrap';\n\n/* Routes */\nimport Signup from 'views/Signup';\nimport Login from 'views/Login';\n\nconst propTypes = {\n  location: PropTypes.object,\n};\n\nconst HomeComponent = ({ location }) => (\n  <Switch location={location}>\n    <Route path=\"/\" exact>\n      <Jumbotron>\n        <h1>Test-app</h1>\n      </Jumbotron>\n    </Route>\n    <Route path=\"/signup\" component={Signup} />\n    <Route path=\"/login\" component={Login} />\n    <Redirect to=\"/\" />\n  </Switch>\n);\n\nHomeComponent.propTypes = propTypes;\n\n\nexport default HomeComponent;\n","import { connect } from 'react-redux';\n\n/* Components */\nimport HomeComponent from './HomeComponent';\n\nconst mapStateToProps = ({ routing: { location } }) => ({\n  location,\n});\n\nexport default connect(mapStateToProps)(HomeComponent);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from 'reactstrap';\nimport { map } from 'lodash';\n\n/* Components */\nimport Card from 'components/Card';\n\nconst propTypes = {\n  isOpen: PropTypes.bool,\n  toggleCartModal: PropTypes.func,\n  items: PropTypes.array,\n};\n\nconst Cart = ({ isOpen, toggleCartModal, items }) => (\n  <Modal isOpen={isOpen} toggle={toggleCartModal} size=\"lg\">\n    <ModalHeader toggle={toggleCartModal}>Cart</ModalHeader>\n    <ModalBody>\n      {items.length === 0 ? (\n        <div>No items</div>\n      ) : map(items, item => (\n        <Card\n          key={item.id}\n          {...item}\n          isCart\n        />\n      ))}\n    </ModalBody>\n    <ModalFooter>\n      <Button color=\"primary\" onClick={() => toggleCartModal()}>Close</Button>\n    </ModalFooter>\n  </Modal>\n);\n\nCart.propTypes = propTypes;\n\nexport default Cart;\n","import { connect } from 'react-redux';\n\n/* Actions */\nimport { actions } from './ducks';\n\n/* Components */\nimport CartComponent from './CartComponent';\n\nconst mapStateToProps = ({ cart: { isOpen, items } }) => ({\n  isOpen,\n  items,\n});\nconst mapDispatchToProps = dispatch => ({\n  toggleCartModal: () => dispatch(actions.toggleCartModal()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartComponent);\n","/* eslint react/jsx-one-expression-per-line:0 */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  Nav,\n  Navbar,\n  NavItem,\n  NavLink,\n  NavbarBrand,\n  Button,\n} from 'reactstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\n/* Components */\nimport Cart from 'modules/Cart';\n\nconst propTypes = {\n  cartItemsCount: PropTypes.number,\n  toggleCartModal: PropTypes.func,\n  isAuthenticated: PropTypes.bool,\n  user: PropTypes.string,\n};\n\nconst HeaderComponent = ({\n  cartItemsCount,\n  toggleCartModal,\n  isAuthenticated,\n  user,\n}) => (\n  <Navbar color=\"light\" light expand=\"md\" className=\"header\">\n    <LinkContainer to=\"/\">\n      <NavbarBrand>WebShop</NavbarBrand>\n    </LinkContainer>\n    {isAuthenticated ? (\n      <div>\n        Hello, {user}!\n      </div>\n    ) : (\n      <Nav navbar>\n        <NavItem>\n          <LinkContainer to=\"/signup\">\n            <NavLink>Sign Up</NavLink>\n          </LinkContainer>\n        </NavItem>\n        <NavItem>\n          <LinkContainer to=\"/login\">\n            <NavLink href=\"/login\">Log In</NavLink>\n          </LinkContainer>\n        </NavItem>\n      </Nav>\n    )}\n    {isAuthenticated && (\n      <Button\n        className=\"ml-auto\"\n        color=\"success\"\n        onClick={() => toggleCartModal()}\n      >\n        Cart: {cartItemsCount}\n      </Button>\n    )}\n    <Cart />\n  </Navbar>\n);\n\nHeaderComponent.propTypes = propTypes;\n\nexport default HeaderComponent;\n","import { connect } from 'react-redux';\n\n/* Actions */\nimport { actions as cartActions } from 'modules/Cart/ducks';\n\n/* Components */\nimport HeaderComponent from './HeaderComponent';\n\nconst mapStateToProps = ({ cart: { items }, services: { isAuthenticated, user } }) => ({\n  cartItemsCount: items.length,\n  isAuthenticated,\n  user,\n});\nconst mapDispatchToProps = dispatch => ({\n  toggleCartModal: () => dispatch(cartActions.toggleCartModal()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderComponent);\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n/* Components */\nimport Search from 'views/Search';\nimport Home from 'views/Home';\n\n/* Modules */\nimport Header from 'modules/Header';\nimport { Container, Col, Row } from 'reactstrap';\n\nconst propTypes = {\n  isAuthenticated: PropTypes.bool,\n};\n\nconst AppComponent = ({ isAuthenticated }) => {\n  const Component = isAuthenticated\n    ? Search\n    : Home;\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <Header />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Route path=\"/\" component={Component} />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nAppComponent.propTypes = propTypes;\n\nexport default AppComponent;\n","import { connect } from 'react-redux';\n\n/* Component */\nimport AppComponent from './AppComponent';\n\nconst mapStateToProps = ({ services: { isAuthenticated } }) => ({\n  isAuthenticated,\n});\n\nexport default connect(mapStateToProps)(AppComponent);\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'babel-polyfill';\nimport 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'react-router-redux';\nimport store, { history } from './store';\n\nimport AppContainer from './AppContainer';\nimport * as serviceWorker from './serviceWorker';\n\n/* Styles */\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <AppContainer />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}